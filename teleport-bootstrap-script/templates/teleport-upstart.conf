#!/bin/bash
#
#       /etc/rc.d/init.d/teleport
#
#       Daemonize the teleport agent.
#
# chkconfig:   2345 95 20
# description: SSH Infrastructure for clusters and teams
# processname: teleport
# pidfile: /var/run/teleport/pidfile

# Source function library.
. /etc/init.d/functions

TELEPORT=/usr/local/bin/teleport
CONFIG=/etc/teleport.yaml
PID_FILE=/var/run/teleport/teleport.pid
LOG_FILE=/var/log/teleport.log

# Source configuration variables
[ -e /etc/teleport ] && . /etc/teleport

export GOMAXPROCS=${GOMAXPROCS:-2}

#
# Create the /var/run/consul directory, which can live on a tmpfs
# filesystem and be destroyed between reboots.
#
mkrundir() {
        [ ! -d /var/run/teleport ] && mkdir -p /var/run/teleport
}

#
# Create a PID file if it doesn't already exist, for clean upgrades
# from previous init-script controlled daemons.
#
KILLPROC_OPT="-p ${PID_FILE}"
mkpidfile() {
        # Create PID file if it didn't exist
        mkrundir
        [ ! -f $PID_FILE ] && pidofproc $CONSUL > $PID_FILE
        if [ $? -ne 0 ] ; then
            rm $PID_FILE
            KILLPROC_OPT=""
        fi
}

start() {
        echo -n "Starting teleport: "
        mkrundir
        [ -f $PID_FILE ] && rm $PID_FILE
        daemon --pidfile="$PID_FILE" \
            "$TELEPORT" start --config="$CONFIG" --nodename $NODENAME --advertise-ip $ADVERTISE_IP --auth-server $AUTH_SERVER --token $AUTH_TOKEN >> "$LOG_FILE" &
        retcode=$?
        sleep 1 # Give teleport a change to start before writing PID
        PID=$(pgrep teleport)
        echo $PID >> $PID_FILE
        touch /var/lock/subsys/teleport
        return $retcode
}

stop() {
        DELAY=5 # seconds maximum to wait for a leave

        echo -n "Shutting down teleport: "
        mkpidfile

        killproc $KILLPROC_OPT $TELEPORT
        retcode=$?

        rm -f /var/lock/subsys/teleport $PID_FILE
        return $retcode
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $PID_FILE teleport
        ;;
    restart)
        stop
        start
        ;;
    reload)
        mkpidfile
        killproc $KILLPROC_OPT $TELEPORT -HUP
        ;;
    condrestart)
        [ -f /var/lock/subsys/teleport ] && restart || :
        ;;
    *)
        echo "Usage: teleport {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
retcode=$?
# Don't let the [OK] get stomped on.
echo
exit $retcode
